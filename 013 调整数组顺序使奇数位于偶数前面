题目描述
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。

分析：
重点在于相对位置不变，且要保证较低的时间和空间复杂度。所以采用另设列表的方法，此时时间复杂度为 O(n)，空间复杂度为 O(n)。


class Solution:
    def reOrderArray(self , array ):
        # write code here
        l=len(array)
        if l==0:
            return []
        even=[]
        odd=[]
        for i in range(l):
            if array[i]%2==0:
                even.append(array[i])
            else:
                odd.append(array[i])
        r=odd+even
        return r

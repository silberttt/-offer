问题描述：
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。

分析：
可通过找规律发现方法数符合2**(n)的规律
一阶的时候 f(1) = 1 ；有两阶的时候可以有 f(2)=1+f(1)=2；有三阶的时候可以有 f(3) = 1+f(2)+f(1)=4...依次内推，有n阶时f(n)=2^(n-1)。

解法1：
# -*- coding:utf-8 -*-
class Solution:
    def jumpFloorII(self, number):
        # write code here
        return 2**(number-1)
解法2：
为了加快运算速度，可以通过向左移移位来完成乘以2的工作。二进制数向左移==乘2
class Solution{
public:
    int jumpFloorII(int number) {
        //通过移位计算2的次方
        return 1<<(number-1);  #1向左移动number-1次      
    }
};
